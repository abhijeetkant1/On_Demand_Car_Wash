package com.cg.controller;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import com.cg.models.OrderDetails;
import com.cg.repository.OrderRepo;
import com.cg.services.OrderService;

public class OrderController 
{
	@Autowired
	private OrderService BS;

	@Autowired
	private OrderRepo repo;
//controller sholud  not have repositorty variable
	// Order Operations
	@PostMapping("/addorder")
	//@ApiOperation(value = "To Add new order")
	public String addorder(@RequestBody OrderDetails order) {
		order.setOrderId(BS.getSequenceNumber(OrderDetails.SEQUENCE_NAME));
		BS.addOrder(order);
		return "order placed with washer" + order;
	}

	@GetMapping("/allorders")
	//@ApiOperation(value = "To Get all order Details")
	public List<OrderDetails> getOrder() {
		return BS.orderdetails();
	}

	@PutMapping("/updateorder")
	//@ApiOperation(value = "To update order Details")
	public String updateDetails(@RequestBody OrderDetails order) {
		BS.updateOrder(order);
		return "Updated sucessfully";
	}

	@DeleteMapping("/cancelorder/{id}")
	//@ApiOperation(value = "Deletes order by Id")
	public ResponseEntity<Object> deletorder(@RequestParam int id) {
		boolean isOrderExist = repo.existsById(id);
		if (isOrderExist) {
			BS.deleteById(id);
			return new ResponseEntity<Object>("Order deleted with id " + id, HttpStatus.OK);
		} else {
		//	throw new ApiRequestException("ORDER NOT FOUND WITH THIS ID:" + id);
		}
	}
}
